<%@ jet package="CodeGenerator" class="clkval_sswh_template"
imports="java.util.* java.text.*  com.ifx.davex.appjetinteract.App2JetInterface" %>
<% App2JetInterface app = (App2JetInterface) argument; %>

<% String AppBaseuri = "app/clk002/0";%>
<% String MappedUri = null; %>

<% int Is11Device = -1; %>
<% int Is12Device = -1; %>
<% int Is13Device = -1; %>

<% Is11Device = ((app.getSoftwareId().substring(0,2).compareTo("11")==0)?1:0); %>
<% Is12Device = ((app.getSoftwareId().substring(0,2).compareTo("12")==0)?1:0); %>
<% Is13Device = ((app.getSoftwareId().substring(0,2).compareTo("13")==0)?1:0); %>

/******************************************************************************
 *
 * Copyright (C) 2013 Infineon Technologies AG. All rights reserved.
 *
 * Infineon Technologies AG (Infineon) is supplying this software for use with
 * Infineon's microcontrollers.
 * This file can be freely distributed within development tools that are
 * supporting such microcontrollers.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
 * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
 * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
 *
********************************************************************************
**                                                                            **
**                                                                            **
** PLATFORM : Infineon XMC1xxx Series                                         **
**                                                                            **
** COMPILER : Compiler Independent                                            **
**                                                                            **
** AUTHOR   : App Developer                                                   **
**                                                                            **
** MAY BE CHANGED BY USER [Yes/No]: Yes                                       **
**                                                                            **
** MODIFICATION DATE : Oct 30, 2013                                           **
**                                                                            **
*******************************************************************************/

/*******************************************************************************
**                       Author(s) Identity                                   **
********************************************************************************
**                                                                            **
** Initials     Name                                                          **
** ---------------------------------------------------------------------------**
** Yogesh       App Developer                                                 **
*******************************************************************************/
/* Revision History
 *****************************************************************************
 *Date           Version   Remarks
 * 18 Jan 2013   v1.0.0    Initial Version
 * 04 Sep 2013   v1.0.4    Added support for XMC1201, XMC1202, XMC1301 devices
 *
 *
*/
/**
 * @file CLKVAL_SSW.h
 *
 * @brief  Header file for Clock App
 *
 */

#ifndef CLKVAL_SSW_H_
#define CLKVAL_SSW_H_

/* Support for C++ codebase */
#ifdef __cplusplus
extern "C" {
#endif

/*******************************************************************************
**                           Include Files                                    **
*******************************************************************************/

/*******************************************************************************
**                      Global Macro Definitions                              **
*******************************************************************************/

/**
 * @ingroup CLK002_publicparam
 * @{
 */


/**
 * @}
 */

/*******************************************************************************
**                      Global Macro Definitions                              **
*******************************************************************************/
/*System Software Data, used during Startup*/
<%int SSWpclksel1 = app.getIntegerValue(AppBaseuri + "/SSWpclksel");%>
<%int SSWidiv1 = app.getIntegerValue(AppBaseuri + "/SSWidiv");%>
<%int SSWfdiv1 =app.getIntegerValue(AppBaseuri + "/SSWfdiv");%>
<%int SSWrtcclksel1 =app.getIntegerValue(AppBaseuri + "/SSWrtcclksel");%>

#define   CLK002_SSW_PCLKSEL            (<%=SSWpclksel1%>)
#define   CLK002_SSW_IDIV               (<%=SSWidiv1%>)      
#define   CLK002_SSW_FDIV               (<%=SSWfdiv1%>)    
#define   CLK002_SSW_RTCCLKSEL          (<%=SSWrtcclksel1%>)

#define   CLKVAL1_SSW        ((CLK002_SSW_PCLKSEL<<SCU_CLK_CLKCR_PCLKSEL_Pos)&\
                             SCU_CLK_CLKCR_PCLKSEL_Msk)|\
                             ((CLK002_SSW_IDIV<<SCU_CLK_CLKCR_IDIV_Pos)&\
                             SCU_CLK_CLKCR_IDIV_Msk)|\
                             ((CLK002_SSW_FDIV<<SCU_CLK_CLKCR_FDIV_Pos)&\
                             SCU_CLK_CLKCR_FDIV_Msk)|\
                             ((CLK002_SSW_RTCCLKSEL<<\
                             SCU_CLK_CLKCR_RTCCLKSEL_Pos)&\
                             SCU_CLK_CLKCR_RTCCLKSEL_Msk)

<%int CGAT_VADCSHS = app.getIntegerValue(AppBaseuri + "/clkgating_vadcshs/cgat_clr");%>
<%int CGAT_CCU8    = app.getIntegerValue(AppBaseuri + "/clkgating_ccu8/cgat_clr");%>
<%int CGAT_CCU4    = app.getIntegerValue(AppBaseuri + "/clkgating_ccu4/cgat_clr");%>
<%int CGAT_USIC    = app.getIntegerValue(AppBaseuri + "/clkgating_usic/cgat_clr");%>
<%int CGAT_BCCU    = app.getIntegerValue(AppBaseuri + "/clkgating_bccu/cgat_clr");%>
<%int CGAT_LEDTS0  = app.getIntegerValue(AppBaseuri + "/clkgating_ledts0/cgat_clr");%>
<%int CGAT_LEDTS1  = app.getIntegerValue(AppBaseuri + "/clkgating_ledts1/cgat_clr");%>
<%int CGAT_POSIF   = app.getIntegerValue(AppBaseuri + "/clkgating_posif/cgat_clr");%>
<%int CGAT_MATH    = app.getIntegerValue(AppBaseuri + "/clkgating_math/cgat_clr");%>
<%int CGAT_WDT     = app.getIntegerValue(AppBaseuri + "/clkgating_wdt/cgat_clr");%>
<%int CGAT_RTC     = app.getIntegerValue(AppBaseuri + "/clkgating_rtc/cgat_clr");%>

#define    CLK002_CGAT_VADCSHS          (<%=CGAT_VADCSHS%>)
#define    CLK002_CGAT_CCU8             (<%=CGAT_CCU8%>)
#define    CLK002_CGAT_CCU4             (<%=CGAT_CCU4%>)
#define    CLK002_CGAT_USIC             (<%=CGAT_USIC%>)
#define    CLK002_CGAT_BCCU             (<%=CGAT_BCCU%>)
#define    CLK002_CGAT_LEDTS0           (<%=CGAT_LEDTS0%>)
#define    CLK002_CGAT_LEDTS1           (<%=CGAT_LEDTS1%>)
#define    CLK002_CGAT_POSIF            (<%=CGAT_POSIF%>)
#define    CLK002_CGAT_MATH             (<%=CGAT_MATH%>)
#define    CLK002_CGAT_WDT              (<%=CGAT_WDT%>)
#define    CLK002_CGAT_RTC              (<%=CGAT_RTC%>)

<% if(Is11Device == 1){%>
#define    CLKVAL2_SSW     (CLK002_CGAT_VADCSHS<<SCU_CLK_CGATCLR0_VADC_Pos) |\
                           (CLK002_CGAT_CCU4<<SCU_CLK_CGATCLR0_CCU40_Pos)|\
                           (CLK002_CGAT_USIC<<SCU_CLK_CGATCLR0_USIC0_Pos)|\
                           (CLK002_CGAT_WDT<<SCU_CLK_CGATCLR0_WDT_Pos)|\
                           (CLK002_CGAT_RTC<<SCU_CLK_CGATCLR0_RTC_Pos)


<%} else if (Is12Device==1){%>
#define    CLKVAL2_SSW     (CLK002_CGAT_VADCSHS<<SCU_CLK_CGATCLR0_VADC_Pos) |\
                           (CLK002_CGAT_CCU4<<SCU_CLK_CGATCLR0_CCU40_Pos)|\
                           (CLK002_CGAT_USIC<<SCU_CLK_CGATCLR0_USIC0_Pos)|\
                           (CLK002_CGAT_BCCU<<SCU_CLK_CGATCLR0_BCCU0_Pos)|\
                           (CLK002_CGAT_LEDTS0<<SCU_CLK_CGATCLR0_LEDTS0_Pos)|\
                           (CLK002_CGAT_LEDTS1<<SCU_CLK_CGATCLR0_LEDTS1_Pos)|\
                           (CLK002_CGAT_WDT<<SCU_CLK_CGATCLR0_WDT_Pos)|\
                           (CLK002_CGAT_RTC<<SCU_CLK_CGATCLR0_RTC_Pos)


<%} else if (Is13Device==1){%>
#define    CLKVAL2_SSW     (CLK002_CGAT_VADCSHS<<SCU_CLK_CGATCLR0_VADC_Pos) |\
                           (CLK002_CGAT_CCU8<<SCU_CLK_CGATCLR0_CCU80_Pos)|\
                           (CLK002_CGAT_CCU4<<SCU_CLK_CGATCLR0_CCU40_Pos)|\
                           (CLK002_CGAT_USIC<<SCU_CLK_CGATCLR0_USIC0_Pos)|\
                           (CLK002_CGAT_BCCU<<SCU_CLK_CGATCLR0_BCCU0_Pos)|\
                           (CLK002_CGAT_POSIF<<SCU_CLK_CGATCLR0_POSIF0_Pos)|\
                           (CLK002_CGAT_MATH<<SCU_CLK_CGATCLR0_MATH_Pos)|\
                           (CLK002_CGAT_WDT<<SCU_CLK_CGATCLR0_WDT_Pos)|\
                           (CLK002_CGAT_RTC<<SCU_CLK_CGATCLR0_RTC_Pos)

<%}%>

    
        


/*******************************************************************************
**                      Global Type Definitions                               **
*******************************************************************************/
/*******************************************************************************
** FUNCTION PROTOTYPES                                                        **
*******************************************************************************/
/* Support for C++ codebase */
#ifdef __cplusplus
}
#endif   

#endif /* CLKVAL_SSW_H_ */

/*CODE_BLOCK_END*/

