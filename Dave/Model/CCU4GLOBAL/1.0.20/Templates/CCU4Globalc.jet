<%@ jet package="CodeGenerator" class="CCU4Global_cTemplate" 
imports="java.util.* com.ifx.davex.appjetinteract.App2JetInterface" %>
<% App2JetInterface app = (App2JetInterface) argument; %>


/*CODE_BLOCK_BEGIN[CCU4GLOBAL.c]*/


/*******************************************************************************
 Copyright (c) 2011, Infineon Technologies AG                                 **
 All rights reserved.                                                         **
                                                                              **
 Redistribution and use in source and binary forms, with or without           **
 modification,are permitted provided that the following conditions are met:   **
                                                                              **
 *Redistributions of source code must retain the above copyright notice,      **
 this list of conditions and the following disclaimer.                        **
 *Redistributions in binary form must reproduce the above copyright notice,   **
 this list of conditions and the following disclaimer in the documentation    **
 and/or other materials provided with the distribution.                       **
 *Neither the name of the copyright holders nor the names of its contributors **
 may be used to endorse or promote products derived from this software without**
 specific prior written permission.                                           **
                                                                              **
 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
 ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
 LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
 SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
 CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
 POSSIBILITY OF SUCH DAMAGE.                                                  **
                                                                              **
 To improve the quality of the software, users are encouraged to share        **
 modifications, enhancements or bug fixes with Infineon Technologies AG       **
 dave@infineon.com).                                                          **
                                                                              **
********************************************************************************
**                                                                            **
**                                                                            **
** PLATFORM : Infineon XMC4000/XMC1000 Series                                 **
**                                                                            **
** COMPILER : Compiler Independent                                            **
**                                                                            **
** AUTHOR   : App Developer                                                   **
**                                                                            **
** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
**                                                                            **
** MODIFICATION DATE : January 25, 2013                                       **
**                                                                            **
*******************************************************************************/
/*******************************************************************************
**                      Author(s) Identity                                    **
********************************************************************************
**                                                                            **
** Initials     Name                                                          **
** ---------------------------------------------------------------------------**
** KS           App Developer                                                 **
**                                                                            **
*******************************************************************************/

/**
 * @file  CCU4GLOBAL.c
 *
 * @brief This file contains implementations of all Public and Private functions
 *        of CCU4GLOBAL App.
 */
/* Revision History
 * 22 March     2012   v1.0.0    Initial version
 * 17 September 2012   v1.0.4    code to disable clock gating for XMC44 devices
 * 25 January   2013   v1.0.10   code to disable clock gating for XMC1xxx devices
 */
/*******************************************************************************
**                      Include Files                                         **
*******************************************************************************/

#include "../../inc/CCU4GLOBAL/CCU4GLOBAL.h"

/*******************************************************************************
**                 Public Function declarations                              **
*******************************************************************************/
/**
 * @cond INTERNAL_DOCS
 */

void CCU4GLOBAL_Init(void)
{
  static uint32_t CCU4InitCalled = (uint32_t)0;
  if(CCU4InitCalled == (uint32_t)0)
  {
    CCU4InitCalled = (uint32_t)1;
    /*
     * Each instance of the App brings the module out of reset and enable the prescalar clock
     */
    <% int Is44Device = -1; %>
    <% int Is42Device = -1; %>
    <% int Is45Device = -1; %>
    <% int Is1xDevice = -1; %>
    <% Is45Device = ((app.getSoftwareId().substring(0,2).compareTo("45")==0)?1:0); %>
    <% Is44Device = ((app.getSoftwareId().substring(0,2).compareTo("44")==0)?1:0); %>
    <% Is42Device = ((app.getSoftwareId().substring(0,2).compareTo("42")==0)?1:0); %>
    <% Is1xDevice = ((app.getSoftwareId().substring(0,1).compareTo("1")==0)?1:0); %>  
    /* Initialise the clock */
    <% if((Is45Device==1)||(Is44Device==1)||(Is42Device==1)) { %>
    CLK001_Init();        
    <% } else { %>
    CLK002_Init();
    <%} %>  
    <% String AppBaseuri = "app/ccu4global/"; %>
    <% String kernelNo = null; %>
    <% String SliceUri = null; %>
    <% String temp = "3"; %>
    <% String appInst  = null; %>
    <% ArrayList<String> appsList = (ArrayList<String>)(app.getApps("app/ccu4global/"));
    for (String appIns : appsList ) {
    	appInst = appIns.substring(appIns.lastIndexOf("/")+1);%>
      <% SliceUri = app.getMappedUri(AppBaseuri + appInst +"/global"); %>
      <% if ((SliceUri != null) && (SliceUri.trim() != "")) { %>
        <% kernelNo = SliceUri.substring(SliceUri.indexOf("/ccu4")+6,SliceUri.indexOf("/global")); %>
    <%if ((Is44Device==1)||(Is42Device==1)||(Is1xDevice==1))
    {%>  
    /* Disables the gating for CCU4 kernel */      
    /*This is applicable for XMC4400,XMC4200 and XMC1xxx Devices*/
    <% if(Integer.parseInt(kernelNo) <=2) { %>
    <%if (Is1xDevice==1){ %>
    if (!((uint32_t)SCU_CLK->CGATCLR0 & (uint32_t)SCU_CLK_CGATCLR0_CCU4<%=kernelNo%>_Pos)){ 
    SCU_GENERAL->PASSWD = 0x000000C0UL;
    WR_REG(SCU_CLK->CLKCR, SCU_CLK_CLKCR_CNTADJ_Msk, SCU_CLK_CLKCR_CNTADJ_Pos,CLK002_DELAYCNT);
    SET_BIT(SCU_CLK->CGATCLR0, SCU_CLK_CGATCLR0_CCU4<%=kernelNo%>_Pos);
    while ((uint32_t)SCU_CLK->CLKCR & (uint32_t)SCU_CLK_CLKCR_VDDC2LOW_Msk)
    {
    	    ;
    }
    SCU_GENERAL->PASSWD = 0x000000C3UL;
    }
    <% } else { %>
    SET_BIT(SCU_CLK->CGATCLR0, SCU_CLK_CGATCLR0_CCU4<%=kernelNo%>_Pos);
    <%} %>
    <% } else { %>
    SET_BIT(SCU_CLK->CGATCLR1, SCU_CLK_CGATCLR1_CCU4<%=kernelNo%>_Pos);
    <%} %>
    <%}%>
    
    <%if ((Is45Device==1)||(Is44Device==1)||(Is42Device==1))
    {%> 
    /* Deassert the peripheral */
    /*This is applicable for XMC4500, XMC4400 and XMC4200 Devices*/
    <% if(kernelNo.equals(temp)) { %>
    RESET001_DeassertReset(PER1_CCU4<%=kernelNo%>);
    <% } else { %>
    RESET001_DeassertReset(PER0_CCU4<%=kernelNo%>);
    <% } %>
    <% } %>
    
    /* Sets Run bit of the Prescalar */
    SET_BIT(CCU4Global_Handle<%=appInst%>.CC4yKernRegsPtr->GIDLC,CCU4_GIDLC_SPRB_Pos);
    <%} 
    else {%> //This app is not mapped to any CCU4 Module <%}%>
    <%}%>  
    
  }
}


/**
 * @endcond
 */
/*CODE_BLOCK_END*/
