   1              	# 1 "../Startup/startup_XMC1100.s"
   1              	/*****************************************************************************/
   0              	
   2              	/* Startup_XMC1100.s: Startup file for XMC1100 device series                 */
   0              	
   3              	/*****************************************************************************/
   4              	
   5              	/* ********************* Version History *********************************** */
   6              	/* ***************************************************************************
   7              	V1.0, Oct, 02, 2012 PKB:Startup file for XMC1  
   8              	V1.1, Oct, 19, 2012 PKB:ERU and MATH interrupt handlers  
   9              	V1.2, Nov, 02, 2012 PKB:Renamed AllowPLLInitByStartup to AllowClkInitByStartup  
  10              	V1.3, Dec, 11, 2012 PKB:Attributes of .XmcVeneerCode section changed  
  11              	V1.4, Dec, 13, 2012 PKB:Removed unwanted interrupts/veneers  
  12              	V1.5, Jan, 26, 2013 PKB:Corrected the SSW related entries  
  13              	V1.6, Feb, 13, 2013 PKB:Relative path to Device_Data.h  
  14              	V1.7, Feb, 19, 2013 PKB:Included XMC1100_SCU.inc
  15              	V1.8, Jan, 24, 2014 PKB:Removed AllowClkInitStartup and DAVE Extended init
  16              	V1.9, Feb, 05, 2014 PKB:Removed redundant alignment code from copy+clear funcs
  17              	V1.10, Feb, 14, 2014 PKB:Added software_init_hook and hardware_init_hook
  18              	V1.11, May, 06, 2014 JFT:__COPY_FLASH2RAM to initialize ram 
  19              	                         Added ram_code section initialization
  20              	**************************************************************************** */
  21              	/**
  22              	* @file     Startup_XMC1100.s
  23              	*           XMC1100 Device Series
  24              	* @version  V1.11
  25              	* @date     May 2014
  26              	*
  27              	Copyright (C) 2014 Infineon Technologies AG. All rights reserved.
  28              	*
  29              	*
  30              	* @par
  31              	* Infineon Technologies AG (Infineon) is supplying this software for use with 
  32              	* Infineon's microcontrollers.  This file can be freely distributed
  33              	* within development tools that are supporting such microcontrollers.
  34              	*
  35              	* @par
  36              	* THIS SOFTWARE IS PROVIDED AS IS.  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  37              	* OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  38              	* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  39              	* ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  40              	* CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  41              	*
  42              	******************************************************************************/
  43              	#ifdef DAVE_CE
  44              	#include <XMC1100_SCU.inc>
   1              	/*************************************************************************** */
   2              	/**
   3              	* @file     XMC1100_SCU.inc
   4              	*           Infineon XMC Device Series
   5              	* @version  V1.0
   6              	* @date     18 Feb 2013
   7              	*
   8              	Copyright (C) 2013 Infineon Technologies AG. All rights reserved.
   9              	*
  10              	*
  11              	* @par
  12              	* Infineon Technologies AG (Infineon) is supplying this software for use with 
  13              	* Infineon's microcontrollers.  This file can be freely distributed
  14              	* within development tools that are supporting such microcontrollers.
  15              	*
  16              	* @par
  17              	* THIS SOFTWARE IS PROVIDED AS IS.  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  18              	* OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  19              	* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  20              	* ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  21              	* CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  22              	*
  23              	******************************************************************************/
  24              	
  25              	/*****************************************************************************
  26              	************************* Version history ************************************
  27              	V1.0, 18 Feb 2013, PKB, Draft
  28              	*****************************************************************************/
  29              	
  30              	/* ================================================================================ */
  31              	/* ================        struct 'SCU_CLK' Position & Mask        ================ */
  32              	/* ================================================================================ */
  33              	
  34              	
  35              	/* --------------------------------  SCU_CLK_CLKCR  ------------------------------- */
  36              	#define SCU_CLK_CLKCR_FDIV_Pos                0                                                    
  37              	#define SCU_CLK_CLKCR_FDIV_Msk                (0x000000ff << SCU_CLK_CLKCR_FDIV_Pos)               
  38              	#define SCU_CLK_CLKCR_IDIV_Pos                8                                                    
  39              	#define SCU_CLK_CLKCR_IDIV_Msk                (0x000000ff << SCU_CLK_CLKCR_IDIV_Pos)               
  40              	#define SCU_CLK_CLKCR_PCLKSEL_Pos             16                                                   
  41              	#define SCU_CLK_CLKCR_PCLKSEL_Msk             (0x01 << SCU_CLK_CLKCR_PCLKSEL_Pos)                  
  42              	#define SCU_CLK_CLKCR_RTCCLKSEL_Pos           17                                                   
  43              	#define SCU_CLK_CLKCR_RTCCLKSEL_Msk           (0x07 << SCU_CLK_CLKCR_RTCCLKSEL_Pos)                
  44              	#define SCU_CLK_CLKCR_CNTADJ_Pos              20                                                   
  45              	#define SCU_CLK_CLKCR_CNTADJ_Msk              (0x000003ff << SCU_CLK_CLKCR_CNTADJ_Pos)             
  46              	#define SCU_CLK_CLKCR_VDDC2LOW_Pos            30                                                   
  47              	#define SCU_CLK_CLKCR_VDDC2LOW_Msk            (0x01 << SCU_CLK_CLKCR_VDDC2LOW_Pos)                 
  48              	#define SCU_CLK_CLKCR_VDDC2HIGH_Pos           31                                                   
  49              	#define SCU_CLK_CLKCR_VDDC2HIGH_Msk           (0x01 << SCU_CLK_CLKCR_VDDC2HIGH_Pos)                
  50              	
  51              	/* ------------------------------  SCU_CLK_CGATCLR0  ------------------------------ */
  52              	#define SCU_CLK_CGATCLR0_VADC_Pos             0                                                    
  53              	#define SCU_CLK_CGATCLR0_VADC_Msk             (0x01 << SCU_CLK_CGATCLR0_VADC_Pos)                  
  54              	#define SCU_CLK_CGATCLR0_CCU40_Pos            2                                                    
  55              	#define SCU_CLK_CGATCLR0_CCU40_Msk            (0x01 << SCU_CLK_CGATCLR0_CCU40_Pos)                 
  56              	#define SCU_CLK_CGATCLR0_USIC0_Pos            3                                                    
  57              	#define SCU_CLK_CGATCLR0_USIC0_Msk            (0x01 << SCU_CLK_CGATCLR0_USIC0_Pos)                 
  58              	#define SCU_CLK_CGATCLR0_WDT_Pos              9                                                    
  59              	#define SCU_CLK_CGATCLR0_WDT_Msk              (0x01 << SCU_CLK_CGATCLR0_WDT_Pos)                   
  60              	#define SCU_CLK_CGATCLR0_RTC_Pos              10                                                   
  61              	#define SCU_CLK_CGATCLR0_RTC_Msk              (0x01 << SCU_CLK_CGATCLR0_RTC_Pos)                   
  62              	...
  45              	#include "../Dave/Generated/inc/DAVESupport/Device_Data.h"
   1              	/*******************************************************************************
   2              	**  DAVE App Name : DAVESupport       App Version: 1.0.44               
   3              	**  This file is generated by DAVE, User modification to this file will be    **
   4              	**  overwritten at the next code generation.                                  **
   5              	*******************************************************************************/
   6              	
   7              	/**************************************************************************//**
   8              	 *
   9              	 * Copyright (C) 2011 Infineon Technologies AG. All rights reserved.
  10              	 *
  11              	 * Infineon Technologies AG (Infineon) is supplying this software for use with
  12              	 * Infineon's microcontrollers.
  13              	 * This file can be freely distributed within development tools that are
  14              	 * supporting such microcontrollers.
  15              	 *
  16              	 * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17              	 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18              	 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19              	 * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
  20              	 * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21              	 *
  22              	********************************************************************************
  23              	**                                                                            **
  24              	**                                                                            **
  25              	** PLATFORM : Infineon <Microcontroller name, step>                           **
  26              	**                                                                            **
  27              	** COMPILER : Compiler Independent                                            **
  28              	**                                                                            **
  29              	** MODIFICATION DATE : Jan  22, 2014                                       **
  30              	**                                                                            **
  31              	*******************************************************************************/
  32              	
  33              	/**
  34              	 * @file  Device_Data.h
  35              	 *
  36              	 * @brief This file contains clock definition 
  37              	 *        prototypes.
  38              	 * 22 Jan 2014 v1.0.40 Initial version.
  39              	 *
  40              	 */
  41              	
  42              	#ifndef _DEVICE_DATA_H_
  43              	#define _DEVICE_DATA_H_
  44              	
  45              	#ifdef __cplusplus
  46              	extern "C" {
  47              	#endif
  48              	  
  49              	#include "../../inc/CLK002/CLKVAL_SSW.h"  
   1              	/*******************************************************************************
   2              	**  DAVE App Name : CLK002       App Version: 1.0.8               
   3              	**  This file is generated by DAVE, User modification to this file will be    **
   4              	**  overwritten at the next code generation.                                  **
   5              	*******************************************************************************/
   6              	
   7              	
   8              	
   9              	
  10              	
  11              	/******************************************************************************
  12              	 *
  13              	 * Copyright (C) 2013 Infineon Technologies AG. All rights reserved.
  14              	 *
  15              	 * Infineon Technologies AG (Infineon) is supplying this software for use with
  16              	 * Infineon's microcontrollers.
  17              	 * This file can be freely distributed within development tools that are
  18              	 * supporting such microcontrollers.
  19              	 *
  20              	 * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  21              	 * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  22              	 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  23              	 * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
  24              	 * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  25              	 *
  26              	********************************************************************************
  27              	**                                                                            **
  28              	**                                                                            **
  29              	** PLATFORM : Infineon XMC1xxx Series                                         **
  30              	**                                                                            **
  31              	** COMPILER : Compiler Independent                                            **
  32              	**                                                                            **
  33              	** AUTHOR   : App Developer                                                   **
  34              	**                                                                            **
  35              	** MAY BE CHANGED BY USER [Yes/No]: Yes                                       **
  36              	**                                                                            **
  37              	** MODIFICATION DATE : Oct 30, 2013                                           **
  38              	**                                                                            **
  39              	*******************************************************************************/
  40              	
  41              	/*******************************************************************************
  42              	**                       Author(s) Identity                                   **
  43              	********************************************************************************
  44              	**                                                                            **
  45              	** Initials     Name                                                          **
  46              	** ---------------------------------------------------------------------------**
  47              	** Yogesh       App Developer                                                 **
  48              	*******************************************************************************/
  49              	/* Revision History
  50              	 *****************************************************************************
  51              	 *Date           Version   Remarks
  52              	 * 18 Jan 2013   v1.0.0    Initial Version
  53              	 * 04 Sep 2013   v1.0.4    Added support for XMC1201, XMC1202, XMC1301 devices
  54              	 *
  55              	 *
  56              	*/
  57              	/**
  58              	 * @file CLKVAL_SSW.h
  59              	 *
  60              	 * @brief  Header file for Clock App
  61              	 *
  62              	 */
  63              	
  64              	#ifndef CLKVAL_SSW_H_
  65              	#define CLKVAL_SSW_H_
  66              	
  67              	/* Support for C++ codebase */
  68              	#ifdef __cplusplus
  69              	extern "C" {
  70              	#endif
  71              	
  72              	/*******************************************************************************
  73              	**                           Include Files                                    **
  74              	*******************************************************************************/
  75              	
  76              	/*******************************************************************************
  77              	**                      Global Macro Definitions                              **
  78              	*******************************************************************************/
  79              	
  80              	/**
  81              	 * @ingroup CLK002_publicparam
  82              	 * @{
  83              	 */
  84              	
  85              	
  86              	/**
  87              	 * @}
  88              	 */
  89              	
  90              	/*******************************************************************************
  91              	**                      Global Macro Definitions                              **
  92              	*******************************************************************************/
  93              	/*System Software Data, used during Startup*/
  94              	
  95              	#define   CLK002_SSW_PCLKSEL            (0)
  96              	#define   CLK002_SSW_IDIV               (4)      
  97              	#define   CLK002_SSW_FDIV               (0)    
  98              	#define   CLK002_SSW_RTCCLKSEL          (0)
  99              	
 100              	#define   CLKVAL1_SSW        ((CLK002_SSW_PCLKSEL<<SCU_CLK_CLKCR_PCLKSEL_Pos)&\
 101              	                             SCU_CLK_CLKCR_PCLKSEL_Msk)|\
 102              	                             ((CLK002_SSW_IDIV<<SCU_CLK_CLKCR_IDIV_Pos)&\
 103              	                             SCU_CLK_CLKCR_IDIV_Msk)|\
 104              	                             ((CLK002_SSW_FDIV<<SCU_CLK_CLKCR_FDIV_Pos)&\
 105              	                             SCU_CLK_CLKCR_FDIV_Msk)|\
 106              	                             ((CLK002_SSW_RTCCLKSEL<<\
 107              	                             SCU_CLK_CLKCR_RTCCLKSEL_Pos)&\
 108              	                             SCU_CLK_CLKCR_RTCCLKSEL_Msk)
 109              	
 110              	
 111              	#define    CLK002_CGAT_VADCSHS          (0)
 112              	#define    CLK002_CGAT_CCU8             (0)
 113              	#define    CLK002_CGAT_CCU4             (0)
 114              	#define    CLK002_CGAT_USIC             (0)
 115              	#define    CLK002_CGAT_BCCU             (0)
 116              	#define    CLK002_CGAT_LEDTS0           (0)
 117              	#define    CLK002_CGAT_LEDTS1           (0)
 118              	#define    CLK002_CGAT_POSIF            (0)
 119              	#define    CLK002_CGAT_MATH             (0)
 120              	#define    CLK002_CGAT_WDT              (0)
 121              	#define    CLK002_CGAT_RTC              (0)
 122              	
 123              	#define    CLKVAL2_SSW     (CLK002_CGAT_VADCSHS<<SCU_CLK_CGATCLR0_VADC_Pos) |\
 124              	                           (CLK002_CGAT_CCU4<<SCU_CLK_CGATCLR0_CCU40_Pos)|\
  50              	
  46              	#else
  47              	#define CLKVAL1_SSW 0x80000000
  48              	#define CLKVAL2_SSW 0x80000000
  49              	#endif
  50              	
  51              	/* A macro to define vector table entries */
  52              	.macro Entry Handler
  53              	   .long \Handler
  54              	.endm
  55              	
  56              	/* A couple of macros to ease definition of the various handlers */
  57              	.macro Insert_ExceptionHandler Handler_Func 
  58              	   .weak \Handler_Func
  60              	   \Handler_Func:
  61              	   B  .
  63              	.endm    
  64              	
  65              	/* ================== START OF VECTOR TABLE DEFINITION ====================== */
  66              	/* Vector Table - This is indirectly branched to through the veneers */
  67              	    .syntax unified   
  68              	    .cpu cortex-m0
  69              	
  70              	    .section ".Xmc1100.reset"
  71              	    .globl  __Xmc1100_interrupt_vector_cortex_m
  73              	
  74              	__Xmc1100_interrupt_vector_cortex_m:
  75 0000 00000000 	    .long   __Xmc1100_stack             /* Top of Stack                 */
  76 0004 00000000 	    .long   __Xmc1100_reset_cortex_m    /* Reset Handler                */
  77              	/* 
  78              	 * All entries below are redundant for M0, but are retained because they can
  79              	 * in the future be directly ported to M0 Plus devices.
  80              	 */
  81 0008 00000000 	    Entry   NMI_Handler                 /* NMI Handler                  */
  82 000c 00000000 	    Entry   HardFault_Handler           /* Hard Fault Handler           */
  83 0010 00040000 	    .long   CLKVAL1_SSW                 /* Reserved                     */
  84 0014 00000000 	    .long   CLKVAL2_SSW                 /* Reserved                     */
  85              	#ifdef RETAIN_VECTOR_TABLE
  86              	    .long   0                           /* Reserved                     */
  87              	    .long   0                           /* Reserved                     */
  88              	    .long   0                           /* Reserved                     */
  89              	    .long   0                           /* Reserved                     */
  90              	    .long   0                           /* Reserved                     */
  91              	    Entry   SVC_Handler                 /* SVCall Handler               */
  92              	    .long   0                           /* Reserved                     */
  93              	    .long   0                           /* Reserved                     */
  94              	    Entry   PendSV_Handler              /* PendSV Handler               */
  95              	    Entry   SysTick_Handler             /* SysTick Handler              */
  96              	
  97              	    /* Interrupt Handlers for Service Requests (SR) from XMC1100 Peripherals */
  98              	    Entry   SCU_0_IRQHandler            /* Handler name for SR SCU_0     */
  99              	    Entry   SCU_1_IRQHandler            /* Handler name for SR SCU_1     */
 100              	    Entry   SCU_2_IRQHandler            /* Handler name for SR SCU_2     */
 101              	    Entry   ERU0_0_IRQHandler           /* Handler name for SR ERU0_0    */
 102              	    Entry   ERU0_1_IRQHandler           /* Handler name for SR ERU0_1    */
 103              	    Entry   ERU0_2_IRQHandler           /* Handler name for SR ERU0_2    */
 104              	    Entry   ERU0_3_IRQHandler           /* Handler name for SR ERU0_3    */
 105              	    .long   0                           /* Not Available                 */
 106              	    .long   0                           /* Not Available                 */
 107              	    Entry   USIC0_0_IRQHandler          /* Handler name for SR USIC0_0   */
 108              	    Entry   USIC0_1_IRQHandler          /* Handler name for SR USIC0_1   */
 109              	    Entry   USIC0_2_IRQHandler          /* Handler name for SR USIC0_2   */
 110              	    Entry   USIC0_3_IRQHandler          /* Handler name for SR USIC0_3   */
 111              	    Entry   USIC0_4_IRQHandler          /* Handler name for SR USIC0_4   */
 112              	    Entry   USIC0_5_IRQHandler          /* Handler name for SR USIC0_5   */
 113              	    Entry   VADC0_C0_0_IRQHandler       /* Handler name for SR VADC0_C0_0  */
 114              	    Entry   VADC0_C0_1_IRQHandler       /* Handler name for SR VADC0_C0_1  */
 115              	    .long   0                           /* Not Available                 */
 116              	    .long   0                           /* Not Available                 */
 117              	    .long   0                           /* Not Available                 */
 118              	    .long   0                           /* Not Available                 */
 119              	    Entry   CCU40_0_IRQHandler          /* Handler name for SR CCU40_0   */
 120              	    Entry   CCU40_1_IRQHandler          /* Handler name for SR CCU40_1   */
 121              	    Entry   CCU40_2_IRQHandler          /* Handler name for SR CCU40_2   */
 122              	    Entry   CCU40_3_IRQHandler          /* Handler name for SR CCU40_3   */
 123              	    .long   0                           /* Not Available                 */
 124              	    .long   0                           /* Not Available                 */
 125              	    .long   0                           /* Not Available                 */
 126              	    .long   0                           /* Not Available                 */
 127              	    .long   0                           /* Not Available                 */
 128              	    .long   0                           /* Not Available                 */
 129              	    .long   0                           /* Not Available                 */
 130              	#endif
 131              	
 133              	/* ================== END OF VECTOR TABLE DEFINITION ======================= */
 134              	
 135              	/* ================== START OF VECTOR ROUTINES ============================= */
 136              	    .thumb 
 137              	/* ======================================================================== */
 138              	/* Reset Handler */
 139              	
 140              	    .thumb_func 
 141              	    .globl  __Xmc1100_reset_cortex_m
 143              	__Xmc1100_reset_cortex_m:
 144              	    .fnstart
 145              	
 146              	    /* C routines are likely to be called. Setup the stack now */
 147              	    /* This is already setup by BootROM,hence this step is optional */ 
 148 0018 0248     	    LDR R0,=__Xmc1100_stack
 149 001a 8546     	    MOV SP,R0
 150              	    
 151              	    /* Launch custom pre-program loading startup procedure */
 152 001c 0248     	    LDR R0,=hardware_init_hook
 153 001e 8047     	    BLX R0
 154              	
 155              	    /* Branch to the program loader now */
 156 0020 0CE0     	    B       __Xmc1100_Program_Loader 
 157              	    
 158 0022 00000000 	    .pool
 158      00000000 
 158      0000
 159              	    .cantunwind
 160              	    .fnend
 162              	/* ======================================================================== */
 163              	/* __Xmc1100_reset must yield control to __Xmc1100_Program_Loader before control
 164              	   to C land is given */
 165              	   .section .Xmc1100.postreset,"x",%progbits
 166              	 __COPY_FLASH2RAM:
 167              	   .fnstart:
 168              	   /* Is there anything to be copied? */
 169 0000 002A     	   CMP R2,#0
 170 0002 0AD0     	   BEQ SKIPCOPY
 171              	   
 172              	   /* For bytecount less than 4, at least 1 word must be copied */
 173 0004 042A     	   CMP R2,#4
 174 0006 00D2     	   BCS STARTCOPY
 175              	   
 176              	   /* Byte count < 4 ; so bump it up */
 177 0008 0422     	   MOVS R2,#4
 178              	
 179              	STARTCOPY:
 180              	   /* 
 181              	      R2 contains byte count. Change it to word count. It is ensured in the 
 182              	      linker script that the length is always word aligned.
 183              	   */
 184 000a 9208     	   LSRS R2,R2,#2 /* Divide by 4 to obtain word count */
 185              	
 186              	   /* The proverbial loop from the schooldays */
 187              	COPYLOOP:
 188 000c 0368     	   LDR R3,[R0]
 189 000e 0B60     	   STR R3,[R1]
 190 0010 013A     	   SUBS R2,#1
 191 0012 02D0     	   BEQ SKIPCOPY
 192 0014 0430     	   ADDS R0,#4
 193 0016 0431     	   ADDS R1,#4
 194 0018 F8E7     	   B COPYLOOP
 195              	    
 196              	SKIPCOPY:
 197 001a 7047     	   BX LR
 198              	
 199              	   __Xmc1100_Program_Loader:
 200              	   .fnstart
 201              	   /* Memories are accessible now*/
 202              	   
 203              	   /* DATA COPY */
 204              	   /* R0 = Start address, R1 = Destination address, R2 = Size */
 205 001c 1148     	   LDR R0, =DataLoadAddr
 206 001e 1249     	   LDR R1, =__Xmc1100_sData
 207 0020 124A     	   LDR R2, =__Xmc1100_Data_Size
 208 0022 FFF7EDFF 	   BL __COPY_FLASH2RAM
 209              	
 210              	   /* RAM_CODE COPY */
 211              	   /* R0 = Start address, R1 = Destination address, R2 = Size */
 212 0026 1248     	   LDR R0, =__ram_code_load
 213 0028 1249     	   LDR R1, =__ram_code_start
 214 002a 134A     	   LDR R2, =__ram_code_size
 215 002c FFF7E8FF 	   BL __COPY_FLASH2RAM
 216              	
 217              	   /* VENEER COPY */
 218              	   /* R0 = Start address, R1 = Destination address, R2 = Size */
 219 0030 1248     	   LDR R0, =VeneerLoadAddr
 220 0032 1349     	   LDR R1, =VeneerStart
 221 0034 134A     	   LDR R2, =VeneerSize
 222 0036 FFF7E3FF 	   BL __COPY_FLASH2RAM
 223              	
 224              	   /* BSS CLEAR */
 225 003a 1348     	   LDR R0, =__Xmc1100_sBSS     /* Start of BSS */
 226 003c 1349     	   LDR R1, =__Xmc1100_BSS_Size /* BSS size in bytes */
 227              	
 228              	   /* Find out if there are items assigned to BSS */   
 229 003e 0029     	   CMP R1,#0 
 230 0040 06D0     	   BEQ SKIPCLEAR
 231              	
 232              	STARTCLEAR:
 233 0042 8908     	   LSRS R1,R1,#2            /* BSS size in words */
 234              	   
 235 0044 0022     	   MOVS R2,#0
 236              	CLEARLOOP:
 237 0046 0260     	   STR R2,[R0]
 238 0048 0139     	   SUBS R1,#1
 239 004a 01D0     	   BEQ SKIPCLEAR
 240 004c 0430     	   ADDS R0,#4
 241 004e FAE7     	   B CLEARLOOP
 242              	    
 243              	SKIPCLEAR:
 244              	
 245              	   /* Reset stack pointer before zipping off to user application, Optional */
 246 0050 0F48     	   LDR R0,=__Xmc1100_stack 
 247 0052 8546     	   MOV SP,R0
 248              	
 249              	   /* Perform System Initialization */   
 250 0054 0F48     	   LDR R0,=SystemInit
 251 0056 8047     	   BLX R0
 252              	
 253              	   /* Launch custom post-program loading startup procedure */
 254 0058 0F48     	   LDR R0,=software_init_hook
 255 005a 8047     	   BLX R0
 256              	
 257 005c 0020     	   MOVS R0,#0
 258 005e 0021     	   MOVS R1,#0
 259 0060 0E4A     	   LDR R2, =main
 260 0062 9746     	   MOV PC,R2
 261              	
 262 0064 00000000 	   .pool
 262      00000000 
 262      00000000 
 262      00000000 
 262      00000000 
 263              	   .cantunwind
 264              	   .fnend
 266              	/* ======================================================================== */
 267              	/* ========== START OF EXCEPTION HANDLER DEFINITION ======================== */
 268              	
 269              	/* Default exception Handlers - Users may override this default functionality by
 270              	   defining handlers of the same name in their C code */
 271              	    .thumb 
 272              	    .text
 273              	
 274 0000 FEE7     	    Insert_ExceptionHandler NMI_Handler
 275              	/* ======================================================================== */
 276 0002 FEE7     	    Insert_ExceptionHandler HardFault_Handler
 277              	/* ======================================================================== */
 278 0004 FEE7     	    Insert_ExceptionHandler SVC_Handler
 279              	/* ======================================================================== */
 280 0006 FEE7     	    Insert_ExceptionHandler PendSV_Handler
 281              	/* ======================================================================== */
 282 0008 FEE7     	    Insert_ExceptionHandler SysTick_Handler
 283              	
 284              	/* ============= END OF EXCEPTION HANDLER DEFINITION ======================== */
 285              	
 286              	/* ============= START OF INTERRUPT HANDLER DEFINITION ====================== */
 287              	
 288              	/* IRQ Handlers */
 289 000a FEE7     	    Insert_ExceptionHandler SCU_0_IRQHandler
 290              	/* ======================================================================== */
 291 000c FEE7     	    Insert_ExceptionHandler SCU_1_IRQHandler
 292              	/* ======================================================================== */
 293 000e FEE7     	    Insert_ExceptionHandler SCU_2_IRQHandler
 294              	/* ======================================================================== */
 295 0010 FEE7     	    Insert_ExceptionHandler ERU0_0_IRQHandler
 296              	/* ======================================================================== */
 297 0012 FEE7     	    Insert_ExceptionHandler ERU0_1_IRQHandler
 298              	/* ======================================================================== */
 299 0014 FEE7     	    Insert_ExceptionHandler ERU0_2_IRQHandler
 300              	/* ======================================================================== */
 301 0016 FEE7     	    Insert_ExceptionHandler ERU0_3_IRQHandler
 302              	/* ======================================================================== */
 303 0018 FEE7     	    Insert_ExceptionHandler VADC0_C0_0_IRQHandler
 304              	/* ======================================================================== */
 305 001a FEE7     	    Insert_ExceptionHandler VADC0_C0_1_IRQHandler
 306              	/* ======================================================================== */
 307 001c FEE7     	    Insert_ExceptionHandler CCU40_0_IRQHandler
 308              	/* ======================================================================== */
 309 001e FEE7     	    Insert_ExceptionHandler CCU40_1_IRQHandler
 310              	/* ======================================================================== */
 311 0020 FEE7     	    Insert_ExceptionHandler CCU40_2_IRQHandler
 312              	/* ======================================================================== */
 313 0022 FEE7     	    Insert_ExceptionHandler CCU40_3_IRQHandler
 314              	/* ======================================================================== */
 315 0024 FEE7     	    Insert_ExceptionHandler USIC0_0_IRQHandler
 316              	/* ======================================================================== */
 317 0026 FEE7     	    Insert_ExceptionHandler USIC0_1_IRQHandler
 318              	/* ======================================================================== */
 319 0028 FEE7     	    Insert_ExceptionHandler USIC0_2_IRQHandler
 320              	/* ======================================================================== */
 321 002a FEE7     	    Insert_ExceptionHandler USIC0_3_IRQHandler
 322              	/* ======================================================================== */
 323 002c FEE7     	    Insert_ExceptionHandler USIC0_4_IRQHandler
 324              	/* ======================================================================== */
 325 002e FEE7     	    Insert_ExceptionHandler USIC0_5_IRQHandler
 326              	/* ======================================================================== */
 327              	/* ======================================================================== */
 328              	/* ======================================================================== */
 329              	
 330              	/* ==================VENEERS VENEERS VENEERS VENEERS VENEERS=============== */
 331              	    .section ".XmcVeneerCode","ax",%progbits
 332              	.globl HardFault_Veneer
 333              	HardFault_Veneer:
 334 0000 2C48     	    LDR R0, =HardFault_Handler
 335 0002 8746     	    MOV PC,R0
 336 0004 00000000 	    .long 0
 337 0008 00000000 	    .long 0
 338 000c 00000000 	    .long 0
 339 0010 00000000 	    .long 0
 340 0014 00000000 	    .long 0
 341 0018 00000000 	    .long 0
 342 001c 00000000 	    .long 0
 343              	    
 344              	/* ======================================================================== */
 345              	.globl SVC_Veneer
 346              	SVC_Veneer:
 347 0020 2548     	    LDR R0, =SVC_Handler
 348 0022 8746     	    MOV PC,R0
 349 0024 00000000 	    .long 0
 350 0028 00000000 	    .long 0
 351              	/* ======================================================================== */
 352              	.globl PendSV_Veneer
 353              	PendSV_Veneer:
 354 002c 2348     	    LDR R0, =PendSV_Handler
 355 002e 8746     	    MOV PC,R0
 356              	/* ======================================================================== */
 357              	.globl SysTick_Veneer 
 358              	SysTick_Veneer:
 359 0030 2348     	    LDR R0, =SysTick_Handler
 360 0032 8746     	    MOV PC,R0
 361              	/* ======================================================================== */
 362              	.globl SCU_0_Veneer 
 363              	SCU_0_Veneer:
 364 0034 2348     	    LDR R0, =SCU_0_IRQHandler
 365 0036 8746     	    MOV PC,R0
 366              	/* ======================================================================== */
 367              	.globl SCU_1_Veneer 
 368              	SCU_1_Veneer:
 369 0038 2348     	    LDR R0, =SCU_1_IRQHandler
 370 003a 8746     	    MOV PC,R0
 371              	/* ======================================================================== */
 372              	.globl SCU_2_Veneer
 373              	SCU_2_Veneer:
 374 003c 2348     	    LDR R0, =SCU_2_IRQHandler
 375 003e 8746     	    MOV PC,R0
 376              	/* ======================================================================== */
 377              	.globl SCU_3_Veneer 
 378              	SCU_3_Veneer:
 379 0040 2348     	    LDR R0, =ERU0_0_IRQHandler
 380 0042 8746     	    MOV PC,R0
 381              	/* ======================================================================== */
 382              	.globl SCU_4_Veneer 
 383              	SCU_4_Veneer:
 384 0044 2348     	    LDR R0, =ERU0_1_IRQHandler
 385 0046 8746     	    MOV PC,R0
 386              	/* ======================================================================== */
 387              	.globl SCU_5_Veneer 
 388              	SCU_5_Veneer:
 389 0048 2348     	    LDR R0, =ERU0_2_IRQHandler
 390 004a 8746     	    MOV PC,R0
 391              	/* ======================================================================== */
 392              	.globl SCU_6_Veneer 
 393              	SCU_6_Veneer:
 394 004c 2348     	    LDR R0, =ERU0_3_IRQHandler
 395 004e 8746     	    MOV PC,R0
 396 0050 00000000 	    .long 0
 397 0054 00000000 	    .long 0
 398              	/* ======================================================================== */
 399              	.globl USIC0_0_Veneer
 400              	USIC0_0_Veneer:
 401 0058 2148     	    LDR R0, =USIC0_0_IRQHandler
 402 005a 8746     	    MOV PC,R0
 403              	/* ======================================================================== */
 404              	.globl USIC0_1_Veneer
 405              	USIC0_1_Veneer:
 406 005c 2148     	    LDR R0, =USIC0_1_IRQHandler
 407 005e 8746     	    MOV PC,R0
 408              	/* ======================================================================== */
 409              	.globl USIC0_2_Veneer
 410              	USIC0_2_Veneer:
 411 0060 2148     	    LDR R0, =USIC0_2_IRQHandler
 412 0062 8746     	    MOV PC,R0
 413              	/* ======================================================================== */
 414              	.globl USIC0_3_Veneer
 415              	USIC0_3_Veneer:
 416 0064 2148     	    LDR R0, =USIC0_3_IRQHandler
 417 0066 8746     	    MOV PC,R0
 418              	/* ======================================================================== */
 419              	.globl USIC0_4_Veneer
 420              	USIC0_4_Veneer:
 421 0068 2148     	    LDR R0, =USIC0_4_IRQHandler
 422 006a 8746     	    MOV PC,R0
 423              	/* ======================================================================== */
 424              	.globl USIC0_5_Veneer
 425              	USIC0_5_Veneer:
 426 006c 2148     	    LDR R0, =USIC0_5_IRQHandler
 427 006e 8746     	    MOV PC,R0
 428              	/* ======================================================================== */
 429              	.globl VADC0_C0_0_Veneer 
 430              	VADC0_C0_0_Veneer:
 431 0070 2148     	    LDR R0, =VADC0_C0_0_IRQHandler
 432 0072 8746     	    MOV PC,R0
 433              	/* ======================================================================== */
 434              	.globl VADC0_C0_1_Veneer
 435              	VADC0_C0_1_Veneer:
 436 0074 2148     	    LDR R0, =VADC0_C0_1_IRQHandler
 437 0076 8746     	    MOV PC,R0
 438 0078 00000000 	    .long 0
 439 007c 00000000 	    .long 0
 440 0080 00000000 	    .long 0
 441 0084 00000000 	    .long 0
 442              	/* ======================================================================== */
 443              	.globl CCU40_0_Veneer
 444              	CCU40_0_Veneer:
 445 0088 1D48     	    LDR R0, =CCU40_0_IRQHandler
 446 008a 8746     	    MOV PC,R0
 447              	/* ======================================================================== */
 448              	.globl CCU40_1_Veneer
 449              	CCU40_1_Veneer:
 450 008c 1D48     	    LDR R0, =CCU40_1_IRQHandler
 451 008e 8746     	    MOV PC,R0
 452              	/* ======================================================================== */
 453              	.globl CCU40_2_Veneer
 454              	CCU40_2_Veneer:
 455 0090 1D48     	    LDR R0, =CCU40_2_IRQHandler
 456 0092 8746     	    MOV PC,R0
 457              	/* ======================================================================== */
 458              	.globl CCU40_3_Veneer
 459              	CCU40_3_Veneer:
 460 0094 1D48     	    LDR R0, =CCU40_3_IRQHandler
 461 0096 8746     	    MOV PC,R0
 462 0098 00000000 	    .long 0
 463 009c 00000000 	    .long 0
 464 00a0 00000000 	    .long 0
 465 00a4 00000000 	    .long 0
 466 00a8 00000000 	    .long 0
 467 00ac 00000000 	    .long 0
 468 00b0 00000000 	    .long 0
 469              	/* ======================================================================== */
 470              	
 471              	/* ============= END OF INTERRUPT HANDLER DEFINITION ======================== */
 472              	     .section ".XmcStartup"
 473              	
 474              	 /* ======  Definition of the default weak software_init_hook function =========
 475              	   Applications can customize their startup procedure by defining their version
 476              	   of software_init_hook and hardware_init_hook. It must be expressly noted that access to 
 477              	   global variables in hardware_init_hook is strictly prohibited because the program loading 
 478              	   has not been started.
 479              	 */
 480              	     .weak software_init_hook
 482              	software_init_hook:
 483 0000 C046     	     NOP
 484 0002 7047     	     BX LR
 486              	
 487              	     .weak hardware_init_hook
 489              	hardware_init_hook:
 490 0004 C046     	     NOP
 491 0006 7047     	     BX LR
 493              	     
 494              	    .end
DEFINED SYMBOLS
../Startup/startup_XMC1100.s:74     .Xmc1100.reset:00000000 __Xmc1100_interrupt_vector_cortex_m
../Startup/startup_XMC1100.s:143    .Xmc1100.reset:00000018 __Xmc1100_reset_cortex_m
../Startup/startup_XMC1100.s:274    .text:00000000 NMI_Handler
../Startup/startup_XMC1100.s:276    .text:00000002 HardFault_Handler
                   .Xmc1100.reset:00000000 $d
../Startup/startup_XMC1100.s:148    .Xmc1100.reset:00000018 $t
../Startup/startup_XMC1100.s:489    .XmcStartup:00000004 hardware_init_hook
../Startup/startup_XMC1100.s:199    .Xmc1100.postreset:0000001c __Xmc1100_Program_Loader
../Startup/startup_XMC1100.s:158    .Xmc1100.reset:00000022 $d
         .ARM.exidx.Xmc1100.reset:00000000 $d
../Startup/startup_XMC1100.s:166    .Xmc1100.postreset:00000000 __COPY_FLASH2RAM
../Startup/startup_XMC1100.s:167    .Xmc1100.postreset:00000000 .fnstart
../Startup/startup_XMC1100.s:169    .Xmc1100.postreset:00000000 $t
../Startup/startup_XMC1100.s:196    .Xmc1100.postreset:0000001a SKIPCOPY
../Startup/startup_XMC1100.s:179    .Xmc1100.postreset:0000000a STARTCOPY
../Startup/startup_XMC1100.s:187    .Xmc1100.postreset:0000000c COPYLOOP
../Startup/startup_XMC1100.s:243    .Xmc1100.postreset:00000050 SKIPCLEAR
../Startup/startup_XMC1100.s:232    .Xmc1100.postreset:00000042 STARTCLEAR
../Startup/startup_XMC1100.s:236    .Xmc1100.postreset:00000046 CLEARLOOP
../Startup/startup_XMC1100.s:482    .XmcStartup:00000000 software_init_hook
../Startup/startup_XMC1100.s:262    .Xmc1100.postreset:00000064 $d
     .ARM.exidx.Xmc1100.postreset:00000000 $d
../Startup/startup_XMC1100.s:274    .text:00000000 $t
../Startup/startup_XMC1100.s:278    .text:00000004 SVC_Handler
../Startup/startup_XMC1100.s:280    .text:00000006 PendSV_Handler
../Startup/startup_XMC1100.s:282    .text:00000008 SysTick_Handler
../Startup/startup_XMC1100.s:289    .text:0000000a SCU_0_IRQHandler
../Startup/startup_XMC1100.s:291    .text:0000000c SCU_1_IRQHandler
../Startup/startup_XMC1100.s:293    .text:0000000e SCU_2_IRQHandler
../Startup/startup_XMC1100.s:295    .text:00000010 ERU0_0_IRQHandler
../Startup/startup_XMC1100.s:297    .text:00000012 ERU0_1_IRQHandler
../Startup/startup_XMC1100.s:299    .text:00000014 ERU0_2_IRQHandler
../Startup/startup_XMC1100.s:301    .text:00000016 ERU0_3_IRQHandler
../Startup/startup_XMC1100.s:303    .text:00000018 VADC0_C0_0_IRQHandler
../Startup/startup_XMC1100.s:305    .text:0000001a VADC0_C0_1_IRQHandler
../Startup/startup_XMC1100.s:307    .text:0000001c CCU40_0_IRQHandler
../Startup/startup_XMC1100.s:309    .text:0000001e CCU40_1_IRQHandler
../Startup/startup_XMC1100.s:311    .text:00000020 CCU40_2_IRQHandler
../Startup/startup_XMC1100.s:313    .text:00000022 CCU40_3_IRQHandler
../Startup/startup_XMC1100.s:315    .text:00000024 USIC0_0_IRQHandler
../Startup/startup_XMC1100.s:317    .text:00000026 USIC0_1_IRQHandler
../Startup/startup_XMC1100.s:319    .text:00000028 USIC0_2_IRQHandler
../Startup/startup_XMC1100.s:321    .text:0000002a USIC0_3_IRQHandler
../Startup/startup_XMC1100.s:323    .text:0000002c USIC0_4_IRQHandler
../Startup/startup_XMC1100.s:325    .text:0000002e USIC0_5_IRQHandler
../Startup/startup_XMC1100.s:333    .XmcVeneerCode:00000000 HardFault_Veneer
../Startup/startup_XMC1100.s:334    .XmcVeneerCode:00000000 $t
../Startup/startup_XMC1100.s:336    .XmcVeneerCode:00000004 $d
../Startup/startup_XMC1100.s:346    .XmcVeneerCode:00000020 SVC_Veneer
../Startup/startup_XMC1100.s:347    .XmcVeneerCode:00000020 $t
../Startup/startup_XMC1100.s:349    .XmcVeneerCode:00000024 $d
../Startup/startup_XMC1100.s:353    .XmcVeneerCode:0000002c PendSV_Veneer
../Startup/startup_XMC1100.s:354    .XmcVeneerCode:0000002c $t
../Startup/startup_XMC1100.s:358    .XmcVeneerCode:00000030 SysTick_Veneer
../Startup/startup_XMC1100.s:363    .XmcVeneerCode:00000034 SCU_0_Veneer
../Startup/startup_XMC1100.s:368    .XmcVeneerCode:00000038 SCU_1_Veneer
../Startup/startup_XMC1100.s:373    .XmcVeneerCode:0000003c SCU_2_Veneer
../Startup/startup_XMC1100.s:378    .XmcVeneerCode:00000040 SCU_3_Veneer
../Startup/startup_XMC1100.s:383    .XmcVeneerCode:00000044 SCU_4_Veneer
../Startup/startup_XMC1100.s:388    .XmcVeneerCode:00000048 SCU_5_Veneer
../Startup/startup_XMC1100.s:393    .XmcVeneerCode:0000004c SCU_6_Veneer
../Startup/startup_XMC1100.s:396    .XmcVeneerCode:00000050 $d
../Startup/startup_XMC1100.s:400    .XmcVeneerCode:00000058 USIC0_0_Veneer
../Startup/startup_XMC1100.s:401    .XmcVeneerCode:00000058 $t
../Startup/startup_XMC1100.s:405    .XmcVeneerCode:0000005c USIC0_1_Veneer
../Startup/startup_XMC1100.s:410    .XmcVeneerCode:00000060 USIC0_2_Veneer
../Startup/startup_XMC1100.s:415    .XmcVeneerCode:00000064 USIC0_3_Veneer
../Startup/startup_XMC1100.s:420    .XmcVeneerCode:00000068 USIC0_4_Veneer
../Startup/startup_XMC1100.s:425    .XmcVeneerCode:0000006c USIC0_5_Veneer
../Startup/startup_XMC1100.s:430    .XmcVeneerCode:00000070 VADC0_C0_0_Veneer
../Startup/startup_XMC1100.s:435    .XmcVeneerCode:00000074 VADC0_C0_1_Veneer
../Startup/startup_XMC1100.s:438    .XmcVeneerCode:00000078 $d
../Startup/startup_XMC1100.s:444    .XmcVeneerCode:00000088 CCU40_0_Veneer
../Startup/startup_XMC1100.s:445    .XmcVeneerCode:00000088 $t
../Startup/startup_XMC1100.s:449    .XmcVeneerCode:0000008c CCU40_1_Veneer
../Startup/startup_XMC1100.s:454    .XmcVeneerCode:00000090 CCU40_2_Veneer
../Startup/startup_XMC1100.s:459    .XmcVeneerCode:00000094 CCU40_3_Veneer
../Startup/startup_XMC1100.s:462    .XmcVeneerCode:00000098 $d
../Startup/startup_XMC1100.s:483    .XmcStartup:00000000 $t
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
__Xmc1100_stack
DataLoadAddr
__Xmc1100_sData
__Xmc1100_Data_Size
__ram_code_load
__ram_code_start
__ram_code_size
VeneerLoadAddr
VeneerStart
VeneerSize
__Xmc1100_sBSS
__Xmc1100_BSS_Size
SystemInit
main
